{
  "name": "pr2dwPidm",
  "rule": "sqls.dwhouse.withBatch(1000, \"\"\"\nINSERT INTO cimspr_idr_stg (\n  identity_id,\n  id_type_id,\n  id_source_id,\n  id,\n  id_lastupddttm,\n  id_type_name,\n  id_source_name\n) VALUES ( ?,?,?,?,?,?,?)\n\"\"\") { ps ->\t\n\tsqls.cimspr.eachRow(\"\"\"SELECT x.identity_id, x.id_type_id, x.id_source_id\n\t\t\t, CASE WHEN MIN(x.id) <> MAX(x.id) THEN CONCAT('(MULTIPLE: Has ',COUNT(DISTINCT x.id),' of them)') ELSE MIN(x.id) END AS id\n\t\t\t, MIN(lastupddttm) AS id_lastupddttm\n\t\t\t, MIN(id_type_name) AS id_type_name\n\t\t\t, MIN(id_source_name) AS id_source_name\nFROM (\n\tSELECT DISTINCT\n\t\t\t\ti.identity_id\n\t\t\t, i.identifier_type_id as id_type_id\n\t\t\t, i.source_id as id_source_id\n\t\t\t, SUBSTR(i.identifier,1,255) as id\n\t\t\t, i.merge_date as lastupddttm\n\t\t\t, SUBSTR(itype.identifier_name,1,100) as id_type_name\n\t\t\t, SUBSTR(isrc.name,1,128) as id_source_name\n\tFROM idr_identifiers i\n\tJOIN ctd_identifier_types itype on itype.identifier_type_id = i.identifier_type_id\n\tJOIN ctd_sources isrc on isrc.source_id = i.source_id\n\tWHERE i.identity_id > 3\n\tAND i.status = 'Active'\n        AND i.identifier_type_id IN ( 4 )\n) x\nGROUP BY x.identity_id, x.id_type_id, x.id_source_id\n\"\"\") { r ->\n\t\tps.addBatch(r.identity_id as Integer,r.id_type_id as Integer,r.id_source_id as Integer,r.id,r.id_lastupddttm,r.id_type_name as String,r.id_source_name as String)\n\t}\t\n}\nsqls.dwhouse.execute \"\"\"INSERT INTO cimspr_idr (\n  identity_id,\n  id_type_id,\n  id_source_id,\n  id,\n  id_lastupddttm,\n  id_type_name,\n  id_source_name,\n  effective_status\n)\nSELECT DISTINCT identity_id, id_type_id, id_source_id, id, id_lastupddttm, id_type_name, id_source_name, 'A'\nFROM cimspr_idr_stg\nWHERE id_type_id IN ( 4 )\nMINUS \nSELECT DISTINCT identity_id, id_type_id, id_source_id, id, id_lastupddttm, id_type_name, id_source_name, 'A'\nFROM cimspr_idr_v  \nWHERE id_type_id IN ( 4 ) \n\"\"\"\nsqls.dwhouse.execute \"\"\"INSERT INTO cimspr_idr (\n  identity_id,\n  id_type_id,\n  id_source_id,\n  id,\n  id_lastupddttm,\n  id_type_name,\n  id_source_name,\n  effective_status\n)\nSELECT DISTINCT cimspr_idr_v.identity_id, cimspr_idr_v.id_type_id, cimspr_idr_v.id_source_id, cimspr_idr_v.id, cimspr_idr_v.id_lastupddttm, cimspr_idr_v.id_type_name, cimspr_idr_v.id_source_name, 'I'\nFROM cimspr_idr_v  \nLEFT OUTER JOIN cimspr_idr_stg ON cimspr_idr_stg.identity_id = cimspr_idr_v.IDENTITY_ID and cimspr_idr_stg.id_type_id = cimspr_idr_v.ID_TYPE_ID and cimspr_idr_stg.id_source_id = cimspr_idr_v.ID_SOURCE_ID\nWHERE cimspr_idr_stg.identity_id IS NULL\nAND 0 < (SELECT COUNT(*) FROM cimspr_idr_stg WHERE id_type_id IN ( 4 )) \nAND cimspr_idr_v.ID_TYPE_ID = 4\n\"\"\"",
  "class": "edu.usf.RuleChains.Groovy"
}