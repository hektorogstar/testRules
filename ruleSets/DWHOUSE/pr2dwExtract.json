{
  "name": "pr2dwExtract",
  "rule": "sqls.dwhouse.execute \"TRUNCATE TABLE cimspr_idr_stg\"\nsqls.dwhouse.execute \"\"\"\nINSERT INTO cimspr_idr_stg (\n  identity_id,\n  id_type_id,\n  id_source_id,\n  id,\n  id_lastupddttm,\n  id_type_name,\n  id_source_name\n) VALUES ( 2,2,3,'a','14-APR-14','b','c')\"\"\"\nsqls.dwhouse.execute \"\"\"\nINSERT INTO cimspr_idr_stg (\n  identity_id,\n  id_type_id,\n  id_source_id,\n  id,\n  id_lastupddttm,\n  id_type_name,\n  id_source_name\n) VALUES ( 1,2,3,'a','14-APR-14','b','c')\"\"\"\nsqls.dwhouse.withBatch(1000, \"\"\"\nINSERT INTO cimspr_idr_stg (\n  identity_id,\n  id_type_id,\n  id_source_id,\n  id,\n  id_lastupddttm,\n  id_type_name,\n  id_source_name\n) VALUES ( ?,?,?,?,?,?,? )\n\"\"\") { ps ->\t\n\tsqls.cimspr.eachRow(\"\"\"\n\tSELECT \n\tx.identity_id AS identity_id, \n\tx.id_type_id AS id_type_id, \n\tx.id_source_id AS id_source_id,\n\tCASE WHEN MIN(x.id) <> MAX(x.id) THEN CONCAT('(MULTIPLE: Has ',COUNT(DISTINCT x.id),' of them)') ELSE MIN(x.id) END AS id,\n\tMIN(lastupddttm) AS id_lastupddttm,\n\tMIN(id_type_name) AS id_type_name,\n\tMIN(id_source_name) AS id_source_name\n\tFROM (\n\t\tSELECT DISTINCT\n\t\ti.identity_id\n\t\t, i.identifier_type_id as id_type_id\n\t\t, i.source_id as id_source_id\n\t\t, SUBSTR(i.identifier,1,255) as id\n\t\t, i.merge_date as lastupddttm\n\t\t, SUBSTR(itype.identifier_name,1,100) as id_type_name\n\t\t, SUBSTR(isrc.name,1,128) as id_source_name\n\t\tFROM idr_identifiers i\n\t\tJOIN ctd_identifier_types itype on itype.identifier_type_id = i.identifier_type_id\n\t\tJOIN ctd_sources isrc on isrc.source_id = i.source_id\n\t\tWHERE i.identity_id > 3\n\t\tAND i.status = 'Active'\n\t\tAND i.identifier_type_id NOT IN ( 1, 2, 4, 10, 11 )\n\t) x\n\tGROUP BY x.identity_id, x.id_type_id, x.id_source_id limit 1\n\t\"\"\") { r ->\n\t\tps.addBatch(r)\n\t}\t\n}",
  "class": "edu.usf.RuleChains.Groovy"
}