{
  "name": "deProvisionVIP",
  "rule": "//delete existing group membership record\n//-----------------------------------------------------\nfunction deleteGroupMember($gid, $vipid, $function) {\nGLOBAL $namsDBC;\n$rva = array();\n$rva[0] = 0;\n$rva[1] = 0;\n\nif (isGroupMember($gid, $vipid, $function)) {\n$db0 = new UsfAcMysqlClient($namsDBC);\n$query = \"DELETE FROM vip_group_member WHERE gid = '\".$gid.\"' AND vipid = '\".$vipid.\"' AND function = '\".$function.\"';\";\n$db0->update($query);\n\n// JMD: end the member's default group affiliation if this group is the only source of it...\nif ($function == 'M') {\n$role = getGroupRole($gid); // extract default role for this group\n$query = \"select count(*) from vip_group_member WHERE vipid = '\".$vipid.\"' AND function = '\".$function.\"';\";\nif ($db0->query($query) && $db0->data[0][0] == 0) { // this person is NOT in another VIP group\nupdateAffiliations($vipid, 'S', $role, 0, 'now');\n}\n}\n\ndeprovisionGroupResources($gid, $vipid); // deprovision resouces for this group member\n$rva[0] = 1;\n$rva[1] = $vipid;\n\n// set the ldap update flag\n$query = \"update names set ldap='D' where badge = '\".$vipid.\"';\";\n$db0->update($query);\n$db0->closeDbConnection();\n}\nreturn $rva;\n}\n\n// call deprovisionResource for each resource allocated to this group\n// -------------------------------------------------------------------------------------------\nfunction deprovisionGroupResources($gid, $vipid) {\n        $list = getGroupResourceList($gid);\n        for ($x = 0; $x < count($list); $x++) {\n                deprovisionResource($list[$x], $vipid);\n        }\n}\n\n\nfunction getGroupResourceList($gid) {\n        GLOBAL $namsDBC;\n        $rva = array();\n        \n        $db0 = new UsfAcMysqlClient($namsDBC);\n        $query = \"select rid from vip_group_resource where gid = \".$gid.\";\";\n        if ($db0->query($query) && $db0->getNumberRows() > 0) {\n                for ($x = 0; $x < $db0->getNumberRows(); $x++) {\n                        $rva[$x] = $db0->data[$x][0];\n                }\n        }\n        $db0->closeDbConnection();\n        \n        return $rva;\n}\nfunction deprovisionResource($rid, $vipid) {\n        GLOBAL $namsDBC;\n \n        if (getResourceTriggerCount($rid, $vipid) > 0) { // more active triggers exist\n                return; \n        }\n        $db0 = new UsfAcMysqlClient($namsDBC); \n        $query = \"update vip_res_set set status = 'I' where rid = \".$rid.\" and vipid = \".$vipid.\";\";\n        $db0->update($query);\n        $db0->closeDbConnection();\n}\nfunction getResourceTriggerCount($rid, $vipid) {\n        GLOBAL $namsDBC;\n        $rv = 0;\n\n        $db0 = new UsfAcMysqlClient($namsDBC);\n        // $query = \"select count(*) from vip_group_member where vipid = \".$vipid.\" and function = 'M' and gid in (select gid from vip_group_resource where rid = \".$rid.\");\";\n        $query = \"select count(*) from vip_group_member a, vip_group_resource b where a.gid = b.gid and b.rid = \".$rid.\" and a.vipid = \".$vipid.\" and a.function = 'M';\";\n        if ($db0->query($query) && $db0->getNumberRows() == 1) {\n                $rv = $db0->data[0][0];\n        }\n        $db0->closeDbConnection();\n        return $rv;\n}\n\n\nfunction isGroupMember($gid, $vipid, $function) {\n        global $namsDBC;\n        $rv = false;\n        $db0 = new UsfAcMysqlClient($namsDBC);\n        $query = \"SELECT count(*) FROM vip_group_member WHERE gid = '\".$gid.\"' AND vipid = '\".$vipid.\"' AND function = '\".$function.\"';\";\n        if ($db0->query($query) && $db0->data[0][0] == 1) {\n                $rv = true;\n        }\n        $db0->closeDbConnection();\n        return $rv;\n}\n\n\nfunction getGroupRole($gid) {\n        global $namsDBC;\n        $rv = 'X';\n        $db0 = new UsfAcMysqlClient($namsDBC);\n        $query = \"SELECT role FROM vip_group WHERE gid='\".$gid.\"'\";\n        if ($db0->query($query) && $db0->getNumberRows() == 1) {\n                $rv = $db0->data[0][0];\n        }\n        $db0->closeDbConnection();\n        return $rv;\n}\n\nfunction updateAffiliations($badge, $source, $role, $deptid, $enddate) {\n        GLOBAL $dbc;\n        $affid = 0;\n        $rva = array();\n        $rva[0] = 0;\n        $rva[1] = 0;\n\n        if ($role == '') return $rva; // skip if role is blank\n        if ($source == '') return $rva; // skip if source is blank\n\n        $db0 = new UsfAcMysqlClient($dbc);\n        $query = \"select affid, deptid, date_format(enddate, '%Y%m%d') from affiliations where badge = \".$badge.\" and source = '\".$source.\"'  and role = '\".$role.\"';\";\n        $row = $db0->query($query);\n        if ($row > 0) { // affilition record exists for the given source\n                $affid = $db0->data[0][0];\n                $db_deptid = $db0->data[0][1];\n                $db_enddate = $db0->data[0][2];\n                // only update affiliations if something has changed\n                if (($deptid != 0 AND $deptid != $db_deptid) OR ($enddate != '' AND $db_enddate == '') OR ($enddate == '' AND $db_enddate != '')) {\n                        $query = \"update affiliations set \";\n                        // set the department id\n                        if ($deptid != 0) {\n                                $query.= \"deptid = '\".$deptid.\"', \";\n                        }\n                        // set the end date\n                        if ($enddate == 'now') {\n                                $query.= \"enddate = now() \";\n                        } else if (strlen($enddate) == 8) { // must be 8 characters long\n                                $query.= \"enddate = '\".$enddate.\"' \";\n                        } else {\n                                $query.= \"enddate = null \";\n                        }\n                        $query.= \"where affid = '\".$affid.\"';\";\n\n                        if (!$db0->update($query)) {\n                                $db0->closeDbConnection();\n                                $rva[0] = -1;\n                                $rva[1] = \"updateAffiliations: database error 1\";\n                                return $rva;\n                        }\n                        $rva[0] = 0;\n                        $rva[1] = $badge;\n\n                        // set the dirty flag so this new affiliations is procssed by fixroles\n                        $query = \"update names set ldap='D' where badge='\".$badge.\"'\";\n                        $db0->update($query);\n                }\n        } else if ($row == 0) { // it doesn't exist - create new affiliation\n                $query = \"insert into affiliations (badge, source, role, deptid, orgdate, enddate) values(\".$badge.\", '\".$source.\"', '\".$role.\"', '\".$deptid.\"', now(), \";\n                if ($enddate == 'now') {\n                        $query.= \"now());\";\n                } else if (strlen($enddate) == 8) { // must be 8 characters long\n                        $query.= \"'\".$enddate.\"');\";\n                } else {\n                        $query.= \"null);\";\n                }\n                if (!$db0->update($query)) {\n                        $db0->closeDbConnection();\n                        $rva[0] = -1;\n                        $rva[1] = \"updateAffiliations: database error 2\";\n                        return $rva;\n                }\n\n                // set the dirty flag so this new affiliations is procssed by fixroles\n                $query = \"update names set ldap='D' where badge='\".$badge.\"'\";\n                $db0->update($query);\n\n                $rva[0] = 1;\n                $rva[1] = $badge;\n        } else if ($row < 0) { // error\n                $db0->closeDbConnection();\n                $rva[0] = -1;\n                $rva[1] = \"updateAffiliations: database error 3\";\n                return $rva;\n        }\n        $db0->closeDbConnection();\n\n        return $rva;\n}\n\n",
  "class": "edu.usf.RuleChains.Groovy"
}